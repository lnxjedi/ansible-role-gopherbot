# ansible-generated file

# This configuration is intentionally minimal, containing only required
# secrets for the robot to function and update it's configuration. Most
# configuration should be stored in the configuration directory, which
# should be a git repository for your robot.

# One-character alias the bot can be called by
Alias: '{{ gopherbot_alias }}'
# Protocol configuration - required
Protocol: slack
ProtocolConfig:
  # Slack maximum message size is 4000 bytes; larger messages will be split
  # up into at most MaxMessageSplit separate messages, and then truncated
  MaxMessageSplit: 2
# Port to listen on for http/JSON api calls, for external plugins
LocalPort: {{ gopherbot_local_port }}
# Specify the mechanism for storing the robots memories. Currently only a
# simple file-based brain is available. Be sure that
# <local config dir>/brain is writable by the user the robot runs as.
{% if gopherbot_dynamo_table is defined %}
Brain: dynamo
BrainConfig:
  TableName: {{ gopherbot_dynamo_table }}
  Region: {{ gopherbot_dynamo_region }}
  AccessKeyID: {{ gopherbot_dynamo_key }}
  SecretAccessKey: {{ gopherbot_dynamo_secret }}
{% else %}
Brain: file
BrainConfig:
  BrainDirectory: {{ gopherbot_brain_directory | default("brain") }}
{% endif %}
EncryptBrain: {{ gopherbot_encrypt_brain }}

HistoryProvider: file
HistoryConfig:
  Directory: {{ gopherbot_history_directory }}
WorkSpace: {{ gopherbot_workspace_directory }}

ExternalPlugins:
- Name: update
  Description: A plugin that triggers the updatecfg job
  Path: plugins/update.sh
ExternalJobs:
- Name: updatecfg
  Description: A job that updates the robot's configuration from git
  Path: jobs/updatecfg.sh
ExternalTasks:
- Name: git
  Description: One SCM to Rule Them All
  Path: /usr/bin/git
- Name: ssh-agent
  Description: ssh agent command for terminating the agent
  Path: /usr/bin/ssh-agent
- Name: ssh-init
  Description: Set up an ssh-agent for the robot
  Path: tasks/ssh-init.sh
